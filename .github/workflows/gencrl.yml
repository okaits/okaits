# This is a basic workflow to help you get started with Actions

name: Update the cRL files

# Controls when the workflow will run
on:
  schedule:
    - cron: 0 0 1 * *

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

permissions:
  contents: write
  security-events: write

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  update:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v3

      - name: Setup Environments
        run: |
          sudo apt install openssl gpgsm gpg
          git config user.name "Github Actions"
          git config user.email "github-actions@github.com"
          cd ${GITHUB_WORKSPACE}
          git checkout gh-pages

      - name: Save secret key to working folder
        shell: bash
        run: |
          cd "${GITHUB_WORKSPACE}"/.github/workflows/gencrl
          echo "Now saving secret key to working folder..."
          echo "-----BEGIN RSA PRIVATE KEY-----" > Root/privkey.pem
          echo "${{ secrets.CA_LCS_ROOT_PRIVKEY }}" | sed -s "s/ /\n/g" >> Root/privkey.pem
          echo "-----END RSA PRIVATE KEY-----" >> Root/privkey.pem
          echo "-----BEGIN RSA PRIVATE KEY-----" > SMIME/privkey.pem
          echo "${{ secrets.cA_LCS_SMIME_PRIVKEY }}" | sed -s "s/ /\n/g" >> SMIME/privkey.pem
          echo "-----END RSA PRIVATE KEY-----" >> SMIME/privkey.pem

      - name: Import personal private key
        shell: bash
        run: |
          gpgsm --import ${GITHUB_WORKSPACE}/.github/workflows/gencrl/personal_privkey.pem

      - name: Generate Root CRL
        shell: bash
        run: |
          rm ${GITHUB_WORKSPACE}/crl/linuxcodevserver.crl
          cd ${GITHUB_WORKSPACE}/.github/workflows/gencrl/Root
          openssl ca -gencrl -config ../openssl-config.cfg -out ../../../../crl/linuxcodevserver.crl --passin pass:"${{ secrets.SECRETS_KEYS_PASSWD }}"

      - name: Generate S/MIME CRL
        shell: bash
        run: |
          rm ${GITHUB_WORKSPACE}/crl/linuxcodevserver-smime.crl
          cd ${GITHUB_WORKSPACE}/.github/workflows/gencrl/SMIME
          openssl ca -gencrl -config ../openssl-config.cfg -out ../../../../crl/linuxcodevserver-smime.crl --passin pass:"${{ secrets.SECRETS_KEYS_PASSWD }}"

      - name: Commit and Push
        shell: bash
        run: |
          cd ${GITHUB_WORKSPACE}
          git add .
          git commit -m "[update] Update cRL files (by Github Actions Bot)"
